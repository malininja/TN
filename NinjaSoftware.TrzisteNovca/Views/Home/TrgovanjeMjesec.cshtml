@model NinjaSoftware.TrzisteNovca.Models.Home.TrgovanjeMjesecViewModel
@using NinjaSoftware.TrzisteNovca.CoolJ.EntityClasses
@using NinjaSoftware.TrzisteNovca.Models
@using NinjaSoftware.TrzisteNovca.CoolJ.DatabaseGeneric.BusinessLogic
@{
    string valutaGrupa = Model.ValutaEnum == ValutaEnum.Kn ? "kunama" : "devizama";
    string title = string.Format("Trgovanje {0} u {1} {2}. godine", valutaGrupa, Helper.DativMjeseca(Model.Mjesec), Model.Godina);
    ViewBag.Title = title;
    
    string iznosApendix = string.Empty;
    if (Model.ValutaEnum == ValutaEnum.Kn)
    {
        iznosApendix = "(u mil. kn)";
    }
    
}
<div class="content-header">
    <h1>@title</h1>
</div>
<div class="content-box">
<div class="tn-datepicker">
    <div class="print">
    </div>
</div>
<br />
    <div class="content">
        <table class="default">
            <thead>
                <tr>
                    <th>
                        datum
                    </th>
                    <th>
                        potražnja @iznosApendix
                    </th>
                    <th>
                        ponuda @iznosApendix
                    </th>
                    <th>
                        promet @iznosApendix
                    </th>
                    <th class="noseparator">
                        kamatna stopa (%)
                    </th>
                </tr>
            </thead>
            <tbody>

                @if (Model.ValutaEnum != ValutaEnum.Kn)
                {
                <tr>
                    <td colspan="5" class="noseparator"><strong>@Model.ValutaEnum.ToString().ToUpperInvariant()</strong></td>
                </tr>
                }

                @foreach (TrgovanjeGlavaEntity trgovanjeGlava in Model.TrgovanjeGlavaCollection)
                {
                    <tr>
                        @{
                    decimal? kamatnaStopa = trgovanjeGlava.PrometKamatnaStopaPosto(Model.ValutaEnum);
                    string kamatnaStopaString = kamatnaStopa.HasValue ? kamatnaStopa.Value.ToString("N2") : "-";        
                        }
                        <td>
                            @Html.ActionLink(trgovanjeGlava.Datum.ToShortDateString(), "TrgovanjeDan", new { date = trgovanjeGlava.Datum.ToString("yyyy-MM-dd") })
                        </td>
                        <td>
                            @trgovanjeGlava.Potraznja(Model.ValutaEnum).ToStringInMilions()
                        </td>
                        <td>
                            @trgovanjeGlava.Ponuda(Model.ValutaEnum).ToStringInMilions()
                        </td>
                        <td>
                            @trgovanjeGlava.Promet(Model.ValutaEnum).ToStringInMilions()
                        </td>
                        <td class="noseparator">
                            @kamatnaStopaString
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td>Ukupno:</td>
                    <td>@Model.PotraznjaUkupno.ToStringInMilions()</td>
                    <td>@Model.PonudaUkupno.ToStringInMilions()</td>
                    <td>@Model.PrometUkupno.ToStringInMilions()</td>
                    <td class="noseparator">-</td>
                </tr>
            </tfoot>
        </table>
        @if (ValutaEnum.Kn == Model.ValutaEnum)
        { 
            @Html.Partial("_WideChartHtml", "TRGOVANJE KUNAMA (u mil. kn)")

            <script type="text/javascript">
    $(document).ready(function () {
        var linePonuda = @Model.ChartLinePonudaDataSource;
        var linePotraznja = @Model.ChartLinePotraznjaDataSource;
        var linePromet = @Model.ChartLinePrometDataSource;

        var plot1 = $.jqplot('chart', [linePonuda, linePotraznja, linePromet], {
            axes: {
                xaxis: {
                    renderer: $.jqplot.DateAxisRenderer,
                    tickOptions: { formatString: "%d. %m." }
                },
                yaxis: {
                    min: 0
                }
            },
            legend: { 
                renderer: $.jqplot.EnhancedLegendRenderer,
                show: true,
                location: "s",
                placement: "outside",
                labels: ["Ponuda", "Potražnja", "Promet"],
                marginTop: "35px",
                rendererOptions: {
                    numberRows: 1
                }
            }
        });
    });
            </script>
        }
    </div>
</div>
